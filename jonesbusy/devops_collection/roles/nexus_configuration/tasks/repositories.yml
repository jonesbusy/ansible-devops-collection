---
- name: Delete repositories
  ansible.builtin.uri:
    method: DELETE
    url: "{{ nexus_configuration_nexus_url }}/service/rest/v1/repositories/{{ repository.name }}"
    status_code: [204, 404]
    url_username: "{{ nexus_configuration_username }}"
    url_password: "{{ nexus_configuration_password }}"
    validate_certs: "{{ nexus_configuration_validate_certs }}"
    force_basic_auth: yes
  loop: "{{ nexus_repositories }}"
  loop_control:
    loop_var: repository
  register: nexus_result
  when: not ansible_check_mode and repository.deleted
  changed_when: nexus_result.status == 204
  tags:
    - hosted
    - proxy
    - group

# Configure repositories
- name: Configure hosted and proxy repositories
  include_tasks: tasks/repository.yml
  loop: "{{ nexus_repositories }}"
  loop_control:
    loop_var: repository
  when: not ansible_check_mode and not repository.deleted and (repository.kind == 'hosted' or repository.kind == 'proxy')
  tags:
    - hosted
    - proxy

- name: Configure group repositories
  include_tasks: tasks/repository.yml
  loop: "{{ nexus_repositories }}"
  loop_control:
    loop_var: repository
  when: not ansible_check_mode and not repository.deleted and repository.kind == 'group'
  tags:
    - group

- name: Delete update repositories script if needed
  ansible.builtin.uri:
    method: DELETE
    body_format: json
    url: "{{ nexus_configuration_nexus_url }}/service/rest/v1/script/update_repositories"
    status_code: [204, 404]
    url_username: "{{ nexus_configuration_username }}"
    url_password: "{{ nexus_configuration_password }}"
    validate_certs: "{{ nexus_configuration_validate_certs }}"
    force_basic_auth: yes
  register: nexus_result
  when: not ansible_check_mode
  changed_when: nexus_result.status == 204
  tags:
    - hosted
    - proxy
    - group

- name: Upload update repositories script
  ansible.builtin.uri:
    method: POST
    body_format: json
    url: "{{ nexus_configuration_nexus_url }}/service/rest/v1/script"
    body: "{ \"name\" : \"update_repositories\", \"type\": \"groovy\", \"content\": \"{{ lookup('template', 'repositories_updates.groovy.j2') | replace('\n', '\\n') | replace('\"', '\\\"') }}\" }"
    status_code: [204]
    url_username: "{{ nexus_configuration_username }}"
    url_password: "{{ nexus_configuration_password }}"
    validate_certs: "{{ nexus_configuration_validate_certs }}"
    force_basic_auth: yes
  register: nexus_result
  when: not ansible_check_mode
  changed_when: nexus_result.status == 204
  tags:
    - hosted
    - proxy
    - group

- name: Run update repositories script
  ansible.builtin.uri:
    method: POST
    url: "{{ nexus_configuration_nexus_url }}/service/rest/v1/script/update_repositories/run"
    status_code: [200]
    url_username: "{{ nexus_configuration_username }}"
    url_password: "{{ nexus_configuration_password }}"
    validate_certs: "{{ nexus_configuration_validate_certs }}"
    force_basic_auth: yes
    headers:
      Content-Type: text/plain
    return_content: yes
  register: nexus_result
  when: not ansible_check_mode
  changed_when: nexus_result.status == 200
  tags:
    - hosted
    - proxy
    - group

- name: Delete update repositories script
  ansible.builtin.uri:
    method: DELETE
    body_format: json
    url: "{{ nexus_configuration_nexus_url }}/service/rest/v1/script/update_repositories"
    status_code: [204]
    url_username: "{{ nexus_configuration_username }}"
    url_password: "{{ nexus_configuration_password }}"
    validate_certs: "{{ nexus_configuration_validate_certs }}"
    force_basic_auth: yes
  register: nexus_result
  when: not ansible_check_mode
  changed_when: nexus_result.status == 204
  tags:
    - hosted
    - proxy
    - group